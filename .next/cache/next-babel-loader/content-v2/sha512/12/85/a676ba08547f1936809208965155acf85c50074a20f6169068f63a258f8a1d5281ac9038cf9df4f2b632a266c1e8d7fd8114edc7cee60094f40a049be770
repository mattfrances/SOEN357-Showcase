{"ast":null,"code":"import firebase from \"../firebase/init\";\n\nasync function handleSignUp(email, password, username, name) {\n  try {\n    const {\n      user\n    } = await firebase.auth().createUserWithEmailAndPassword(email, password);\n    await firebase.firestore().collection(\"users\").doc(user.uid).set({\n      username,\n      email: user.email,\n      profilePicture: \"https://firebasestorage.googleapis.com/v0/b/tweeter-45929.appspot.com/o/defaultAvatar.jpg?alt=media&token=072d3268-84f4-4016-b0f7-d440930347f2\",\n      name,\n      bio: null\n    });\n    await firebase.firestore().collection(\"connections\").add({\n      followerID: user.uid,\n      followeeID: user.uid\n    });\n    window.location.replace(\"/home\");\n    return user;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nasync function handleSignIn(email, password) {\n  try {\n    const user = await firebase.auth().signInWithEmailAndPassword(email, password);\n    window.location.replace(\"/home\");\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nasync function handleSignOut() {\n  try {\n    await firebase.auth().signOut();\n    window.location.replace(\"/\");\n    return true;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nexport { handleSignIn, handleSignUp, handleSignOut };","map":{"version":3,"sources":["/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/services/Authentication.js"],"names":["firebase","handleSignUp","email","password","username","name","user","auth","createUserWithEmailAndPassword","firestore","collection","doc","uid","set","profilePicture","bio","add","followerID","followeeID","window","location","replace","error","console","handleSignIn","signInWithEmailAndPassword","handleSignOut","signOut"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;;AAEA,eAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuDC,IAAvD,EAA6D;AAC3D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,QAAQ,CAC5BO,IADoB,GAEpBC,8BAFoB,CAEWN,KAFX,EAEkBC,QAFlB,CAAvB;AAGA,UAAMH,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6CL,IAAI,CAACM,GAAlD,EAAuDC,GAAvD,CAA2D;AAC/DT,MAAAA,QAD+D;AAE/DF,MAAAA,KAAK,EAAEI,IAAI,CAACJ,KAFmD;AAG/DY,MAAAA,cAAc,EACZ,gJAJ6D;AAK/DT,MAAAA,IAL+D;AAM/DU,MAAAA,GAAG,EAAE;AAN0D,KAA3D,CAAN;AASA,UAAMf,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,EAA+CM,GAA/C,CAAmD;AACvDC,MAAAA,UAAU,EAAEX,IAAI,CAACM,GADsC;AAEvDM,MAAAA,UAAU,EAAEZ,IAAI,CAACM;AAFsC,KAAnD,CAAN;AAKAO,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,OAAxB;AACA,WAAOf,IAAP;AACD,GApBD,CAoBE,OAAOgB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAOA,KAAP;AACD;AACF;;AAED,eAAeE,YAAf,CAA4BtB,KAA5B,EAAmCC,QAAnC,EAA6C;AAC3C,MAAI;AACF,UAAMG,IAAI,GAAG,MAAMN,QAAQ,CACxBO,IADgB,GAEhBkB,0BAFgB,CAEWvB,KAFX,EAEkBC,QAFlB,CAAnB;AAGAgB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,OAAxB;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAOA,KAAP;AACD;AACF;;AAED,eAAeI,aAAf,GAA+B;AAC7B,MAAI;AACF,UAAM1B,QAAQ,CAACO,IAAT,GAAgBoB,OAAhB,EAAN;AACAR,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB;AACA,WAAO,IAAP;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAEA,WAAOA,KAAP;AACD;AACF;;AACD,SAASE,YAAT,EAAuBvB,YAAvB,EAAqCyB,aAArC","sourcesContent":["import firebase from \"../firebase/init\";\n\nasync function handleSignUp(email, password, username, name) {\n  try {\n    const { user } = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password);\n    await firebase.firestore().collection(\"users\").doc(user.uid).set({\n      username,\n      email: user.email,\n      profilePicture:\n        \"https://firebasestorage.googleapis.com/v0/b/tweeter-45929.appspot.com/o/defaultAvatar.jpg?alt=media&token=072d3268-84f4-4016-b0f7-d440930347f2\",\n      name,\n      bio: null,\n    });\n\n    await firebase.firestore().collection(\"connections\").add({\n      followerID: user.uid,\n      followeeID: user.uid,\n    });\n\n    window.location.replace(\"/home\");\n    return user;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nasync function handleSignIn(email, password) {\n  try {\n    const user = await firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password);\n    window.location.replace(\"/home\");\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n}\n\nasync function handleSignOut() {\n  try {\n    await firebase.auth().signOut();\n    window.location.replace(\"/\");\n    return true;\n  } catch (error) {\n    console.error(error);\n\n    return error;\n  }\n}\nexport { handleSignIn, handleSignUp, handleSignOut };\n"]},"metadata":{},"sourceType":"module"}