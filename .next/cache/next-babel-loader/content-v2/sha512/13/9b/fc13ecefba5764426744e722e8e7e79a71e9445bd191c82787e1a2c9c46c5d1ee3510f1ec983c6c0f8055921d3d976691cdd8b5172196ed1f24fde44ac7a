{"ast":null,"code":"import firebase from \"../firebase/init\";\nimport { deleteTweet } from \"./DeleteTweet\";\nconst db = firebase.firestore();\nexport const deleteAccount = async userID => {\n  // Delete user from firebase authentication\n  // Delete user doc from \"users\" collection\n  db.collection(\"users\").doc(userID).delete().then(console.log(\"Deleted User Doc\")).catch(e => console.log(e)); // Get all tweets that has authorID = user.uid in \"tweets\" collection\n\n  const tweetsSnapShot = await db.collection(\"tweets\").where(\"authorId\", \"==\", userID).get();\n  tweetsSnapShot.forEach(tweetsDoc => {\n    // Delete those tweets\n    deleteTweet(tweetsDoc.id);\n  }); // Delete all connections\n\n  await db.collection(\"connections\").where(\"followerID\", \"==\", userID).where(\"followeeID\", \"==\", userID).get().then(connectionsSnapShot => {\n    const batch = firebase.firestore().batch();\n    connectionsSnapShot.forEach(connectionDocRef => {\n      batch.delete(connectionDocRef.ref);\n    });\n    batch.commit().then(console.log(\"Deleted Connections\")).catch(e => console.log(e));\n  });\n  firebase.auth().currentUser.delete().then(() => console.log(\"Deleted user from auth\")).catch(e => console.log(e));\n};","map":{"version":3,"sources":["/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/services/DeleteAccount.js"],"names":["firebase","deleteTweet","db","firestore","deleteAccount","userID","collection","doc","delete","then","console","log","catch","e","tweetsSnapShot","where","get","forEach","tweetsDoc","id","connectionsSnapShot","batch","connectionDocRef","ref","commit","auth","currentUser"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,EAAE,GAAGF,QAAQ,CAACG,SAAT,EAAX;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAP,IAAkB;AAC7C;AAEA;AACAH,EAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EACGC,GADH,CACOF,MADP,EAEGG,MAFH,GAGGC,IAHH,CAGQC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAHR,EAIGC,KAJH,CAIUC,CAAD,IAAOH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAJhB,EAJ6C,CAU7C;;AACA,QAAMC,cAAc,GAAG,MAAMZ,EAAE,CAC5BI,UAD0B,CACf,QADe,EAE1BS,KAF0B,CAEpB,UAFoB,EAER,IAFQ,EAEFV,MAFE,EAG1BW,GAH0B,EAA7B;AAIAF,EAAAA,cAAc,CAACG,OAAf,CAAwBC,SAAD,IAAe;AACpC;AACAjB,IAAAA,WAAW,CAACiB,SAAS,CAACC,EAAX,CAAX;AACD,GAHD,EAf6C,CAoB7C;;AACA,QAAMjB,EAAE,CACLI,UADG,CACQ,aADR,EAEHS,KAFG,CAEG,YAFH,EAEiB,IAFjB,EAEuBV,MAFvB,EAGHU,KAHG,CAGG,YAHH,EAGiB,IAHjB,EAGuBV,MAHvB,EAIHW,GAJG,GAKHP,IALG,CAKGW,mBAAD,IAAyB;AAC7B,UAAMC,KAAK,GAAGrB,QAAQ,CAACG,SAAT,GAAqBkB,KAArB,EAAd;AACAD,IAAAA,mBAAmB,CAACH,OAApB,CAA6BK,gBAAD,IAAsB;AAChDD,MAAAA,KAAK,CAACb,MAAN,CAAac,gBAAgB,CAACC,GAA9B;AACD,KAFD;AAGAF,IAAAA,KAAK,CACFG,MADH,GAEGf,IAFH,CAEQC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAFR,EAGGC,KAHH,CAGUC,CAAD,IAAOH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAHhB;AAID,GAdG,CAAN;AAgBAb,EAAAA,QAAQ,CACLyB,IADH,GAEGC,WAFH,CAEelB,MAFf,GAGGC,IAHH,CAGQ,MAAMC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAHd,EAIGC,KAJH,CAIUC,CAAD,IAAOH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAJhB;AAKD,CA1CM","sourcesContent":["import firebase from \"../firebase/init\";\nimport { deleteTweet } from \"./DeleteTweet\";\n\nconst db = firebase.firestore();\n\nexport const deleteAccount = async (userID) => {\n  // Delete user from firebase authentication\n\n  // Delete user doc from \"users\" collection\n  db.collection(\"users\")\n    .doc(userID)\n    .delete()\n    .then(console.log(\"Deleted User Doc\"))\n    .catch((e) => console.log(e));\n\n  // Get all tweets that has authorID = user.uid in \"tweets\" collection\n  const tweetsSnapShot = await db\n    .collection(\"tweets\")\n    .where(\"authorId\", \"==\", userID)\n    .get();\n  tweetsSnapShot.forEach((tweetsDoc) => {\n    // Delete those tweets\n    deleteTweet(tweetsDoc.id);\n  });\n\n  // Delete all connections\n  await db\n    .collection(\"connections\")\n    .where(\"followerID\", \"==\", userID)\n    .where(\"followeeID\", \"==\", userID)\n    .get()\n    .then((connectionsSnapShot) => {\n      const batch = firebase.firestore().batch();\n      connectionsSnapShot.forEach((connectionDocRef) => {\n        batch.delete(connectionDocRef.ref);\n      });\n      batch\n        .commit()\n        .then(console.log(\"Deleted Connections\"))\n        .catch((e) => console.log(e));\n    });\n\n  firebase\n    .auth()\n    .currentUser.delete()\n    .then(() => console.log(\"Deleted user from auth\"))\n    .catch((e) => console.log(e));\n};\n"]},"metadata":{},"sourceType":"module"}