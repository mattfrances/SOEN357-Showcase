{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/components/Comments/Comments.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport firebase from \"../../firebase/init\";\nimport { fetchUser } from \"../../services/FetchData\";\nimport Avatar from \"../Avatar/Avatar\";\n\nvar Comments = function Comments(_ref) {\n  _s();\n\n  var tweetID = _ref.tweetID;\n\n  var _useState = useState([]),\n      comments = _useState[0],\n      setComments = _useState[1];\n\n  useEffect(function () {\n    var getComments = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  firebase.firestore().collection(\"tweets\").where(\"parentTweet\", \"==\", tweetID).onSnapshot( /*#__PURE__*/function () {\n                    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tweetsRef) {\n                      var localComments, i, tweet, id, userInfo;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              localComments = [];\n                              i = 0;\n\n                            case 2:\n                              if (!(i < tweetsRef.size)) {\n                                _context.next = 12;\n                                break;\n                              }\n\n                              tweet = tweetsRef.docs[i].data({\n                                serverTimestamps: \"estimate\"\n                              });\n                              id = tweetsRef.docs[i].id;\n                              _context.next = 7;\n                              return fetchUser({\n                                userID: tweet.authorId\n                              });\n\n                            case 7:\n                              userInfo = _context.sent;\n                              localComments.push(_objectSpread(_objectSpread({}, tweet), {}, {\n                                id: id,\n                                createdAt: tweet.createdAt.toDate().toString(),\n                                author: userInfo\n                              }));\n\n                            case 9:\n                              i++;\n                              _context.next = 2;\n                              break;\n\n                            case 12:\n                              setComments(localComments);\n\n                            case 13:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x) {\n                      return _ref3.apply(this, arguments);\n                    };\n                  }());\n                } catch (err) {\n                  console.log(err);\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getComments() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-b-lg\",\n    children: comments && comments.length > 0 && comments.map(function (comment) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-2 w-12 h-12\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: comment.author.profilePicture\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col  w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-200 p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"inline-block font-poppins font-medium\",\n                  children: comment.author.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"inline-block font-noto font-medium text-xs text-gray-600\",\n                  children: [comment.createdAt, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-noto text-gray-700\",\n                  children: comment.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, _this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Comments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/components/Comments/Comments.jsx"],"names":["useEffect","useState","firebase","fetchUser","Avatar","Comments","tweetID","comments","setComments","getComments","firestore","collection","where","onSnapshot","tweetsRef","localComments","i","size","tweet","docs","data","serverTimestamps","id","userID","authorId","userInfo","push","createdAt","toDate","toString","author","err","console","log","length","map","comment","profilePicture","name","text"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport firebase from \"../../firebase/init\";\nimport { fetchUser } from \"../../services/FetchData\";\nimport Avatar from \"../Avatar/Avatar\";\n\nconst Comments = ({ tweetID }) => {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const getComments = async () => {\n      try {\n        firebase\n          .firestore()\n          .collection(\"tweets\")\n          .where(\"parentTweet\", \"==\", tweetID)\n          .onSnapshot(async (tweetsRef) => {\n            const localComments = [];\n\n            for (let i = 0; i < tweetsRef.size; i++) {\n              const tweet = tweetsRef.docs[i].data({\n                serverTimestamps: \"estimate\",\n              });\n              const id = tweetsRef.docs[i].id;\n              const userInfo = await fetchUser({\n                userID: tweet.authorId,\n              });\n              localComments.push({\n                ...tweet,\n                id,\n                createdAt: tweet.createdAt.toDate().toString(),\n                author: userInfo,\n              });\n            }\n            setComments(localComments);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getComments();\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-b-lg\">\n      {comments &&\n        comments.length > 0 &&\n        comments.map((comment) => (\n          <div className=\"rounded-lg\" key={comment.id}>\n            <div className=\"flex flex-row\">\n              <div className=\"m-2 w-12 h-12\">\n                <Avatar src={comment.author.profilePicture} />\n              </div>\n              <div className=\"flex flex-col  w-full\">\n                <div className=\"bg-gray-200 p-4\">\n                  <div className=\"p-2\">\n                    <p className=\"inline-block font-poppins font-medium\">\n                      {comment.author.name}\n                    </p>\n                    <p className=\"inline-block font-noto font-medium text-xs text-gray-600\">\n                      {comment.createdAt}{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"p-2\">\n                    <p className=\"font-noto text-gray-700\">{comment.text}</p>\n                  </div>\n                </div>\n                {/* <div className=\"flex flex-row py-4\">\n                  <button type=\"submit\">\n                    <span>\n                      <FavoriteBorderIcon />\n                    </span>\n                    Like\n                  </button>\n                  <p className=\"px-2\">.</p>\n                  <p className=\"font-noto font-semibold text-gray-400\">\n                    12k Likes\n                  </p>\n                </div> */}\n              </div>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}