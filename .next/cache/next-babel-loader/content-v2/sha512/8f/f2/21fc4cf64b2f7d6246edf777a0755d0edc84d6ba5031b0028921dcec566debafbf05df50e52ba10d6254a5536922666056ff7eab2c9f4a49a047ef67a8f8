{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/components/ChipsArray/ChipsArray.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      listStyle: 'none',\n      padding: theme.spacing(0.5),\n      margin: 0,\n      marginLeft: 23,\n      width: '100%'\n    },\n    chip: {\n      margin: theme.spacing(0.5)\n    }\n  };\n});\nexport default function ChipsArray() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([{\n    key: 0,\n    label: 'Angular'\n  }, {\n    key: 1,\n    label: 'jQuery'\n  }, {\n    key: 2,\n    label: 'Polymer'\n  }, {\n    key: 3,\n    label: 'React'\n  }, {\n    key: 4,\n    label: 'Vue.js'\n  }]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      chipData = _React$useState2[0],\n      setChipData = _React$useState2[1];\n\n  var handleDelete = function handleDelete(chipToDelete) {\n    return function () {\n      setChipData(function (chips) {\n        return chips.filter(function (chip) {\n          return chip.key !== chipToDelete.key;\n        });\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    component: \"ul\",\n    className: classes.root,\n    children: chipData.map(function (data) {\n      var icon;\n\n      if (data.label === 'React') {\n        icon = /*#__PURE__*/_jsxDEV(TagFacesIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, _this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          icon: icon,\n          label: data.label,\n          onDelete: data.label === 'React' ? undefined : handleDelete(data),\n          className: classes.chip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, _this)\n      }, data.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChipsArray, \"NG5f4uyYu4gy9Z8H4wjanpLRIG4=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChipsArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChipsArray\");","map":{"version":3,"sources":["/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/components/ChipsArray/ChipsArray.jsx"],"names":["React","makeStyles","Chip","Paper","TagFacesIcon","useStyles","theme","root","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","marginLeft","width","chip","ChipsArray","classes","useState","key","label","chipData","setChipData","handleDelete","chipToDelete","chips","filter","map","data","icon","undefined"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAACK,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,cAAc,EAAE,QAFZ;AAGJC,MAAAA,QAAQ,EAAE,MAHN;AAIJC,MAAAA,SAAS,EAAE,MAJP;AAKJC,MAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CALL;AAMJC,MAAAA,MAAM,EAAE,CANJ;AAOJC,MAAAA,UAAU,EAAE,EAPR;AAQJC,MAAAA,KAAK,EAAE;AARH,KADiC;AAWvCC,IAAAA,IAAI,EAAE;AACJH,MAAAA,MAAM,EAAER,KAAK,CAACO,OAAN,CAAc,GAAd;AADJ;AAXiC,GAAZ;AAAA,CAAD,CAA5B;AAgBA,eAAe,SAASK,UAAT,GAAsB;AAAA;;AAAA;;AACnC,MAAMC,OAAO,GAAGd,SAAS,EAAzB;;AADmC,wBAEHL,KAAK,CAACoB,QAAN,CAAe,CAC7C;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAD6C,EAE7C;AAAED,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAF6C,EAG7C;AAAED,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAH6C,EAI7C;AAAED,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAJ6C,EAK7C;AAAED,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAL6C,CAAf,CAFG;AAAA;AAAA,MAE5BC,QAF4B;AAAA,MAElBC,WAFkB;;AAUnC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,YAAD;AAAA,WAAkB,YAAM;AAC3CF,MAAAA,WAAW,CAAC,UAACG,KAAD;AAAA,eAAWA,KAAK,CAACC,MAAN,CAAa,UAACX,IAAD;AAAA,iBAAUA,IAAI,CAACI,GAAL,KAAaK,YAAY,CAACL,GAApC;AAAA,SAAb,CAAX;AAAA,OAAD,CAAX;AACD,KAFoB;AAAA,GAArB;;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,SAAS,EAAEF,OAAO,CAACZ,IAAzC;AAAA,cACGgB,QAAQ,CAACM,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,UAAIC,IAAJ;;AAEA,UAAID,IAAI,CAACR,KAAL,KAAe,OAAnB,EAA4B;AAC1BS,QAAAA,IAAI,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,0BACE;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,KAAK,EAAED,IAAI,CAACR,KAFd;AAGE,UAAA,QAAQ,EAAEQ,IAAI,CAACR,KAAL,KAAe,OAAf,GAAyBU,SAAzB,GAAqCP,YAAY,CAACK,IAAD,CAH7D;AAIE,UAAA,SAAS,EAAEX,OAAO,CAACF;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF,SAASa,IAAI,CAACT,GAAd;AAAA;AAAA;AAAA;AAAA,eADF;AAUD,KAjBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApCuBH,U;UACNb,S;;;KADMa,U","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n    marginLeft: 23,\n    width: '100%'\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nexport default function ChipsArray() {\n  const classes = useStyles();\n  const [chipData, setChipData] = React.useState([\n    { key: 0, label: 'Angular' },\n    { key: 1, label: 'jQuery' },\n    { key: 2, label: 'Polymer' },\n    { key: 3, label: 'React' },\n    { key: 4, label: 'Vue.js' },\n  ]);\n\n  const handleDelete = (chipToDelete) => () => {\n    setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n  };\n\n  return (\n    <Paper component=\"ul\" className={classes.root}>\n      {chipData.map((data) => {\n        let icon;\n\n        if (data.label === 'React') {\n          icon = <TagFacesIcon />;\n        }\n\n        return (\n          <li key={data.key}>\n            <Chip\n              icon={icon}\n              label={data.label}\n              onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n              className={classes.chip}\n            />\n          </li>\n        );\n      })}\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}