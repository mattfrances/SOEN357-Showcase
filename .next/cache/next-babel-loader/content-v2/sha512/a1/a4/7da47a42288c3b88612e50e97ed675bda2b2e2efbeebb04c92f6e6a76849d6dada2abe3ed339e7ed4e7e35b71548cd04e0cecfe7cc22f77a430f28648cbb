{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/pages/[username]/status/[tweetId].jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport React, { useContext } from \"react\";\nimport CommentInput from \"../../../components/CommentInput/CommentInput\";\nimport Comments from \"../../../components/Comments/Comments\";\nimport Post from \"../../../components/Post/Post\";\nimport UserContext from \"../../../context/UserContext\";\nimport firebase from \"../../../firebase/init\";\nimport Layout from \"../../../layouts\";\nimport { fetchUser } from \"../../../services/FetchData\";\n\nconst Tweet = ({\n  tweet\n}) => {\n  const {\n    user\n  } = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [tweet.author.name, \" on Tweeter \\\"\", tweet.text, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col lg:grid lg:grid-cols-3 lg:col-gap-5 my-5 lg:mx=24 xl:mx-48\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2\",\n            children: [/*#__PURE__*/_jsxDEV(Post, {\n              tweet: tweet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), user && /*#__PURE__*/_jsxDEV(CommentInput, {\n              tweetID: tweet.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Comments, {\n              tweetID: tweet.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden lg:block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const tweetID = context.params.tweetId;\n  const res = await firebase.firestore().collection(\"tweets\").doc(tweetID).get();\n  const tweet = res.data();\n  const id = res.id;\n  const user = await fetchUser({\n    userID: tweet.authorId\n  });\n  return {\n    props: {\n      tweet: _objectSpread(_objectSpread({}, tweet), {}, {\n        createdAt: tweet.createdAt.toDate().toString(),\n        id,\n        author: user\n      })\n    }\n  };\n}\nexport default Tweet;","map":{"version":3,"sources":["/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/pages/[username]/status/[tweetId].jsx"],"names":["Head","React","useContext","CommentInput","Comments","Post","UserContext","firebase","Layout","fetchUser","Tweet","tweet","user","author","name","text","id","getServerSideProps","context","tweetID","params","tweetId","res","firestore","collection","doc","get","data","userID","authorId","props","createdAt","toDate","toString"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAWV,UAAU,CAACI,WAAD,CAA3B;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mBACGK,KAAK,CAACE,MAAN,CAAaC,IADhB,oBACmCH,KAAK,CAACI,IADzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,MAAD;AAAA,6BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,0EAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAEJ;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGC,IAAI,iBAAI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAED,KAAK,CAACK;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAFX,eAGE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAEL,KAAK,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzBD;;AA2BA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,OAAO,GAAGD,OAAO,CAACE,MAAR,CAAeC,OAA/B;AACA,QAAMC,GAAG,GAAG,MAAMf,QAAQ,CACvBgB,SADe,GAEfC,UAFe,CAEJ,QAFI,EAGfC,GAHe,CAGXN,OAHW,EAIfO,GAJe,EAAlB;AAKA,QAAMf,KAAK,GAAGW,GAAG,CAACK,IAAJ,EAAd;AACA,QAAMX,EAAE,GAAGM,GAAG,CAACN,EAAf;AACA,QAAMJ,IAAI,GAAG,MAAMH,SAAS,CAAC;AAAEmB,IAAAA,MAAM,EAAEjB,KAAK,CAACkB;AAAhB,GAAD,CAA5B;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLnB,MAAAA,KAAK,kCACAA,KADA;AAEHoB,QAAAA,SAAS,EAAEpB,KAAK,CAACoB,SAAN,CAAgBC,MAAhB,GAAyBC,QAAzB,EAFR;AAGHjB,QAAAA,EAHG;AAIHH,QAAAA,MAAM,EAAED;AAJL;AADA;AADF,GAAP;AAUD;AAED,eAAeF,KAAf","sourcesContent":["import Head from \"next/head\";\nimport React, { useContext } from \"react\";\nimport CommentInput from \"../../../components/CommentInput/CommentInput\";\nimport Comments from \"../../../components/Comments/Comments\";\nimport Post from \"../../../components/Post/Post\";\nimport UserContext from \"../../../context/UserContext\";\nimport firebase from \"../../../firebase/init\";\nimport Layout from \"../../../layouts\";\nimport { fetchUser } from \"../../../services/FetchData\";\n\nconst Tweet = ({ tweet }) => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <div>\n      <Head>\n        <title>\n          {tweet.author.name} on Tweeter \"{tweet.text}\"\n        </title>\n      </Head>\n      <Layout>\n        <div>\n          <div className=\"flex flex-col lg:grid lg:grid-cols-3 lg:col-gap-5 my-5 lg:mx=24 xl:mx-48\">\n            <div className=\"col-span-2\">\n              <Post tweet={tweet} />\n              {user && <CommentInput tweetID={tweet.id} />}\n              <Comments tweetID={tweet.id} />\n            </div>\n            <div className=\"hidden lg:block\">\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </div>\n  );\n};\n\nexport async function getServerSideProps(context) {\n  const tweetID = context.params.tweetId;\n  const res = await firebase\n    .firestore()\n    .collection(\"tweets\")\n    .doc(tweetID)\n    .get();\n  const tweet = res.data();\n  const id = res.id;\n  const user = await fetchUser({ userID: tweet.authorId });\n\n  return {\n    props: {\n      tweet: {\n        ...tweet,\n        createdAt: tweet.createdAt.toDate().toString(),\n        id,\n        author: user,\n      },\n    },\n  };\n}\n\nexport default Tweet;\n"]},"metadata":{},"sourceType":"module"}