{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/pages/[username]/status/[tweetId].jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Head from \"next/head\";\nimport React, { useContext } from \"react\";\nimport CommentInput from \"../../../components/CommentInput/CommentInput\";\nimport Comments from \"../../../components/Comments/Comments\";\nimport Post from \"../../../components/Post/Post\";\nimport UserContext from \"../../../context/UserContext\";\nimport Layout from \"../../../layouts\";\n\nvar Tweet = function Tweet(_ref) {\n  _s();\n\n  var tweet = _ref.tweet;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [tweet.author.name, \" on Tweeter \\\"\", tweet.text, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col lg:grid lg:grid-cols-3 lg:col-gap-5 my-5 lg:mx=24 xl:mx-48\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2\",\n            children: [/*#__PURE__*/_jsxDEV(Post, {\n              tweet: tweet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, _this), user && /*#__PURE__*/_jsxDEV(CommentInput, {\n              tweetID: tweet.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 24\n            }, _this), /*#__PURE__*/_jsxDEV(Comments, {\n              tweetID: tweet.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden lg:block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Tweet, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c = Tweet;\nexport var __N_SSP = true;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/pages/[username]/status/[tweetId].jsx"],"names":["Head","React","useContext","CommentInput","Comments","Post","UserContext","Layout","Tweet","tweet","user","author","name","text","id"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,oBACVP,UAAU,CAACI,WAAD,CADA;AAAA,MACnBI,IADmB,eACnBA,IADmB;;AAG3B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mBACGD,KAAK,CAACE,MAAN,CAAaC,IADhB,oBACmCH,KAAK,CAACI,IADzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,MAAD;AAAA,6BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,0EAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAEJ;AAAb;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGC,IAAI,iBAAI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAED,KAAK,CAACK;AAA7B;AAAA;AAAA;AAAA;AAAA,qBAFX,eAGE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAEL,KAAK,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAME;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CAzBD;;GAAMN,K;;KAAAA,K;;AAkDN,eAAeA,KAAf","sourcesContent":["import Head from \"next/head\";\nimport React, { useContext } from \"react\";\nimport CommentInput from \"../../../components/CommentInput/CommentInput\";\nimport Comments from \"../../../components/Comments/Comments\";\nimport Post from \"../../../components/Post/Post\";\nimport UserContext from \"../../../context/UserContext\";\nimport firebase from \"../../../firebase/init\";\nimport Layout from \"../../../layouts\";\nimport { fetchUser } from \"../../../services/FetchData\";\n\nconst Tweet = ({ tweet }) => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <div>\n      <Head>\n        <title>\n          {tweet.author.name} on Tweeter \"{tweet.text}\"\n        </title>\n      </Head>\n      <Layout>\n        <div>\n          <div className=\"flex flex-col lg:grid lg:grid-cols-3 lg:col-gap-5 my-5 lg:mx=24 xl:mx-48\">\n            <div className=\"col-span-2\">\n              <Post tweet={tweet} />\n              {user && <CommentInput tweetID={tweet.id} />}\n              <Comments tweetID={tweet.id} />\n            </div>\n            <div className=\"hidden lg:block\">\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </div>\n  );\n};\n\nexport async function getServerSideProps(context) {\n  const tweetID = context.params.tweetId;\n  const res = await firebase\n    .firestore()\n    .collection(\"tweets\")\n    .doc(tweetID)\n    .get();\n  const tweet = res.data();\n  const id = res.id;\n  const user = await fetchUser({ userID: tweet.authorId });\n\n  return {\n    props: {\n      tweet: {\n        ...tweet,\n        createdAt: tweet.createdAt.toDate().toString(),\n        id,\n        author: user,\n      },\n    },\n  };\n}\n\nexport default Tweet;\n"]},"metadata":{},"sourceType":"module"}