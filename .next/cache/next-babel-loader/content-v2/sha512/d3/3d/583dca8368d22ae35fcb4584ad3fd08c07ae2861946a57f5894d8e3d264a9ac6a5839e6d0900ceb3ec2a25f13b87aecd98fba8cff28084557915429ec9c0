{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/pages/home.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Post from \"../components/Post/Post\";\nimport Trends from \"../components/Trends/Trends\";\nimport TweetInput from \"../components/TweetInput/TweetInput\";\nimport HomeTweetsContext from \"../context/HomeTweetsContext\";\nimport UserContext from \"../context/UserContext\";\nimport firebase from \"../firebase/init\";\nimport Layout from \"../layouts\";\nimport { fetchUser } from \"../services/FetchData\";\n\nconst Home = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: homeTweets,\n    1: setHomeTweets\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: isEmpty,\n    1: setIsEmpty\n  } = useState(false);\n  const {\n    homeTweetsContext,\n    setHomeTweetsContext\n  } = useContext(HomeTweetsContext);\n  useEffect(async () => {\n    try {\n      if (user) {\n        if (!homeTweetsContext) {\n          setLoading(true);\n          const connectionsRef = await firebase.firestore().collection(\"connections\").where(\"followerID\", \"==\", user.uid).get();\n\n          if (connectionsRef.empty) {\n            setIsEmpty(true);\n            setHomeTweets([]);\n            setLoading(false);\n          } else {\n            const followerIDs = connectionsRef.docs.map(connection => {\n              const floID = connection.data().followeeID;\n              return floID;\n            });\n            firebase.firestore().collection(\"tweets\").where(\"authorId\", \"in\", followerIDs).where(\"parentTweet\", \"==\", null).orderBy(\"createdAt\", \"desc\").onSnapshot(async tweetRef => {\n              const homeUserTweets = [];\n\n              for (let i = 0; i < tweetRef.size; i++) {\n                const userInfo = await fetchUser({\n                  userID: tweetRef.docs[i].data().authorId\n                });\n                let data = tweetRef.docs[i].data();\n                homeUserTweets.push(_objectSpread(_objectSpread({}, data), {}, {\n                  createdAt: data.createdAt.toDate().toString(),\n                  id: tweetRef.docs[i].id,\n                  author: userInfo\n                }));\n              }\n\n              setHomeTweets(homeUserTweets);\n              setLoading(false);\n              setHomeTweetsContext(homeUserTweets);\n            });\n          }\n        } else {\n          setLoading(false);\n          setHomeTweets(homeTweetsContext);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home | Tweeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-4 sm:mx-12 md:mx-24 lg:mx-24 xl:mx-24 mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col lg:grid lg:grid-cols-3 lg:col-gap-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lg:col-span-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-5\",\n              children: /*#__PURE__*/_jsxDEV(TweetInput, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), isEmpty ? /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"You are following no one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this) : homeTweets.map(tweet => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: `${tweet.author.username}/status/${tweet.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-5\",\n                  children: /*#__PURE__*/_jsxDEV(Post, {\n                    tweet: tweet\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)\n            }, tweet.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/matthewfrances/Documents/development/School/Winter2021/SOEN357/twitter-clone/src/pages/home.jsx"],"names":["CircularProgress","Head","Link","useContext","useEffect","useState","Post","Trends","TweetInput","HomeTweetsContext","UserContext","firebase","Layout","fetchUser","Home","user","homeTweets","setHomeTweets","loading","setLoading","isEmpty","setIsEmpty","homeTweetsContext","setHomeTweetsContext","connectionsRef","firestore","collection","where","uid","get","empty","followerIDs","docs","map","connection","floID","data","followeeID","orderBy","onSnapshot","tweetRef","homeUserTweets","i","size","userInfo","userID","authorId","push","createdAt","toDate","toString","id","author","err","console","log","tweet","username"],"mappings":"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","sourcesContent":["import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Post from \"../components/Post/Post\";\nimport Trends from \"../components/Trends/Trends\";\nimport TweetInput from \"../components/TweetInput/TweetInput\";\nimport HomeTweetsContext from \"../context/HomeTweetsContext\";\nimport UserContext from \"../context/UserContext\";\nimport firebase from \"../firebase/init\";\nimport Layout from \"../layouts\";\nimport { fetchUser } from \"../services/FetchData\";\n\nconst Home = () => {\n  const { user } = useContext(UserContext);\n  const [homeTweets, setHomeTweets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const { homeTweetsContext, setHomeTweetsContext } = useContext(\n    HomeTweetsContext\n  );\n\n  useEffect(async () => {\n    try {\n      if (user) {\n        if (!homeTweetsContext) {\n          setLoading(true);\n          const connectionsRef = await firebase\n            .firestore()\n            .collection(\"connections\")\n            .where(\"followerID\", \"==\", user.uid)\n            .get();\n\n          if (connectionsRef.empty) {\n            setIsEmpty(true);\n            setHomeTweets([]);\n            setLoading(false);\n          } else {\n            const followerIDs = connectionsRef.docs.map((connection) => {\n              const floID = connection.data().followeeID;\n              return floID;\n            });\n\n            firebase\n              .firestore()\n              .collection(\"tweets\")\n              .where(\"authorId\", \"in\", followerIDs)\n              .where(\"parentTweet\", \"==\", null)\n              .orderBy(\"createdAt\", \"desc\")\n              .onSnapshot(async (tweetRef) => {\n                const homeUserTweets = [];\n\n                for (let i = 0; i < tweetRef.size; i++) {\n                  const userInfo = await fetchUser({\n                    userID: tweetRef.docs[i].data().authorId,\n                  });\n                  let data = tweetRef.docs[i].data();\n\n                  homeUserTweets.push({\n                    ...data,\n                    createdAt: data.createdAt.toDate().toString(),\n                    id: tweetRef.docs[i].id,\n                    author: userInfo,\n                  });\n                }\n                setHomeTweets(homeUserTweets);\n                setLoading(false);\n                setHomeTweetsContext(homeUserTweets);\n              });\n          }\n        } else {\n          setLoading(false);\n          setHomeTweets(homeTweetsContext);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, [user]);\n\n  return (\n    <div>\n      <Head>\n        <title>Home | Tweeter</title>\n      </Head>\n\n      <Layout>\n        <div className=\"mx-4 sm:mx-12 md:mx-24 lg:mx-24 xl:mx-24 mt-5\">\n          <div className=\"flex flex-col lg:grid lg:grid-cols-3 lg:col-gap-5\">\n            <div className=\"lg:col-span-2\">\n              <div className=\"mb-5\">\n                <TweetInput />\n              </div>\n              {loading && (\n                <div className=\"flex justify-center\">\n                  <CircularProgress />\n                </div>\n              )}\n\n              {isEmpty ? (\n                <h1>You are following no one</h1>\n              ) : (\n                homeTweets.map((tweet) => (\n                  <span key={tweet.id}>\n                    <Link href={`${tweet.author.username}/status/${tweet.id}`}>\n                      <div className=\"mb-5\">\n                        <Post tweet={tweet} />\n                      </div>\n                    </Link>\n                  </span>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}